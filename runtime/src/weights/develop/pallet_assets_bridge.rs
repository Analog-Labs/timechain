//! Autogenerated weights for `pallet_assets_bridge`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 42.0.1
//! DATE: 2025-02-06, STEPS: `100`, REPEAT: `100`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `station`, CPU: `AMD Ryzen Threadripper PRO 5945WX 12-Cores`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// target/release/timechain-node
// benchmark
// pallet
// --pallet=pallet_assets_bridge
// --extrinsic=*
// --dev
// --wasm-execution=compiled
// --repeat=100
// --steps=100
// --output=runtime/src/weights/develop/

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use polkadot_sdk::*;

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_assets_bridge`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_assets_bridge::WeightInfo for WeightInfo<T> {
	/// Storage: `Bridge::Network` (r:1 w:1)
	/// Proof: `Bridge::Network` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Tasks::OpsInsertIndex` (r:1 w:1)
	/// Proof: `Tasks::OpsInsertIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Tasks::Ops` (r:0 w:1)
	/// Proof: `Tasks::Ops` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn teleport_keep_alive() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `241`
		//  Estimated: `3706`
		// Minimum execution time: 50_064_000 picoseconds.
		Weight::from_parts(51_307_000, 0)
			.saturating_add(Weight::from_parts(0, 3706))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `Bridge::Network` (r:1 w:1)
	/// Proof: `Bridge::Network` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Tasks::OpsInsertIndex` (r:1 w:1)
	/// Proof: `Tasks::OpsInsertIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Tasks::Ops` (r:0 w:1)
	/// Proof: `Tasks::Ops` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn force_teleport() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `241`
		//  Estimated: `3706`
		// Minimum execution time: 50_174_000 picoseconds.
		Weight::from_parts(50_946_000, 0)
			.saturating_add(Weight::from_parts(0, 3706))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `Bridge::Network` (r:1 w:1)
	/// Proof: `Bridge::Network` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn register_network() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `3507`
		// Minimum execution time: 9_789_000 picoseconds.
		Weight::from_parts(10_240_000, 0)
			.saturating_add(Weight::from_parts(0, 3507))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Bridge::Network` (r:1 w:1)
	/// Proof: `Bridge::Network` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn force_update_network() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `161`
		//  Estimated: `3626`
		// Minimum execution time: 10_279_000 picoseconds.
		Weight::from_parts(10_640_000, 0)
			.saturating_add(Weight::from_parts(0, 3626))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
